// <auto-generated />
using System;
using ApiLocadora.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ApiLocadora.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200706010328_versao 5")]
    partial class versao5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ApiLocadora.Model.Cliente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Desativado");

                    b.Property<string>("Nome")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("ApiLocadora.Model.Filme", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataEntrega");

                    b.Property<DateTime>("DataLocacao");

                    b.Property<bool>("Desativado");

                    b.Property<bool>("EstaDisponivel");

                    b.Property<string>("Nome")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("Filme");
                });

            modelBuilder.Entity("ApiLocadora.Model.Locacao", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ClienteId");

                    b.Property<bool>("Desativado");

                    b.HasKey("ID");

                    b.HasIndex("ClienteId");

                    b.ToTable("Locacao");
                });

            modelBuilder.Entity("ApiLocadora.Model.LocacaoFilme", b =>
                {
                    b.Property<int>("FilmeId");

                    b.Property<int>("LocacaoId");

                    b.HasKey("FilmeId", "LocacaoId");

                    b.HasIndex("LocacaoId");

                    b.ToTable("Locacoes");
                });

            modelBuilder.Entity("ApiLocadora.Model.Locacao", b =>
                {
                    b.HasOne("ApiLocadora.Model.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ApiLocadora.Model.LocacaoFilme", b =>
                {
                    b.HasOne("ApiLocadora.Model.Filme", "Filme")
                        .WithMany("LocacoesFilmes")
                        .HasForeignKey("FilmeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ApiLocadora.Model.Locacao", "Locacao")
                        .WithMany("LocacoesFilmes")
                        .HasForeignKey("LocacaoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
